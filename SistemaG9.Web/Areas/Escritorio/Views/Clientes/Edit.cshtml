@model SistemaG9.Domain.Models.Clientes

@{
    ViewBag.Title = "Dados Cadstrais";
    Layout = "~/Areas/Escritorio/Views/Shared/_Layout.cshtml";
}

<section class="box">
    <div class="box box-default">
        <div class="box-header with-border">
            <h3 class="box-title">Verifique e corrija seus Dados Cadastrais.</h3>
        </div>

        <div class="box-body">
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

                <div class="form-horizontal">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.ClienteId)
                    @Html.HiddenFor(model => model.Login)
                    @Html.HiddenFor(model => model.Status)
                    @Html.HiddenFor(model => model.Senha)
                    @Html.HiddenFor(model => model.PerfilUsuarioId)

                    <div class="form-group">
                        @Html.LabelFor(model => model.Login, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Login, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                            @Html.ValidationMessageFor(model => model.Login, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Nome, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { @class = "form-control textomaiusculo" } })
                            @Html.ValidationMessageFor(model => model.Nome, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.DataNascimento,"Data de Nascimento", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.DataNascimento, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.DataNascimento, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.CPF, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.CPF, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.CPF, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Endereco, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Endereco, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Endereco, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Numero, "Número", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Numero,  new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Numero, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Complemento, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Complemento, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Complemento, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Bairro, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Bairro, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Bairro, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.CEP, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.CEP, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.CEP, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.EstadoId, "Estado", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownListFor(model => model.EstadoId, new SelectList(ViewBag.Estado, "EstadoId", "Nome"), "Selecione o Estado...", new { @id = "ddlEstados", @class = "form-control" })
                            @*@Html.DropDownListFor(model => model.EstadoId, new SelectList(ViewBag.Estado as System.Collections.IEnumerable, "EstadoId", "Nome"), "Selecione o Estado...", new { @id = "ddlEstados", @class = "form-control" })*@
                            @Html.ValidationMessageFor(model => model.EstadoId, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.CidadeId, "Cidade", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownListFor(model => model.CidadeId, new SelectList(ViewBag.Cidade, "CidadeId", "Nome"), "Selecione a Cidade....", new { @id = "ddlCidades", @class = "form-control" })
                            @*@Html.DropDownListFor(model => model.CidadeId, new SelectList(ViewBag.Cidade as System.Collections.IEnumerable, "CidadeId", "Nome"), "Selecione a Cidade....", new { @id = "ddlCidades", @class = "form-control" })*@
                            @Html.ValidationMessageFor(model => model.CidadeId, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Telefone, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Telefone, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Telefone, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Operadora, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownListFor(model => model.Operadora, new[] {
                                new SelectListItem {Text = "OI", Value = "OI"},
                                new SelectListItem {Text = "TIM", Value = "TIM"},
                                new SelectListItem {Text = "CLARO", Value = "CLARO"},
                                new SelectListItem {Text = "VIVO", Value = "VIVO"},
                                new SelectListItem {Text = "Outra", Value = "Outra"}
                            }, " --- Selecione a Operadora Telefônica --- ", new { @class = "form-control", })
                            @Html.ValidationMessageFor(model => model.Operadora, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.WhatsApp, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.WhatsApp, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.WhatsApp, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.SKYPE, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.SKYPE, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.SKYPE, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    @*<div class="form-group">
                        @Html.LabelFor(model => model.Reentradas, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Reentradas, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Reentradas, "", new { @class = "text-danger" })
                        </div>
                    </div>*@

                    <div class="box-footer">
                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <button type="submit" class="btn btn-primary">Salvar Registros</button>
                                <a class="btn btn-danger" href="@Url.Action("Index","Home")">Cancelar</a>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</section>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        $(document).ready(function () {
            var masks = ['(00) 00000-0000', '(00) 0000-00009'];

            //Código para contornar o conflito do jquery mask com o jquery validate
            $(function () {

                $("#Telefone").mask(masks[1], {
                    onKeyPress: function (val, e, field, options) {
                        field.mask(val.length > 14 ? masks[0] : masks[1], options);
                    }
                });
                $("#WhatsApp").mask(masks[1], {
                    onKeyPress: function (val, e, field, options) {
                        field.mask(val.length > 14 ? masks[0] : masks[1], options);
                    }
                });

                $("#CPF").mask("999.999.999-99");
                $("#CEP").mask("99.999-999");
                $("#DataNascimento").mask("99/99/9999");

                $("#ddlEstados").on("change", function () {
                    var estadoId = $(this).val();
                    var url = '@Url.Action("LoadCidadeId", "Clientes")';
                    //var url = '/Cadastro/LoadCidadeId/';
                    $.getJSON(url, { estadoId: estadoId },
                        function (estadosData) {
                            $("#ddlCidades :gt(0)").remove();
                            var select = $("#ddlCidades");
                            select.attr('disabled', false);
                            select.empty();
                            select.append($('<option/>', {
                                value: 0,
                                text: "Selecione a Cidade... "
                            }));
                            $.each(estadosData, function (index, itemData) {
                                //alert(estadosData);
                                //alert(itemData);
                                select.append($('<option/>', {
                                    value: itemData.Value,
                                    text: itemData.Text
                                }));
                            });
                        });
                });

            });
        })
    </script>
}
